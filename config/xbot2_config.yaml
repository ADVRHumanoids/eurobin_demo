XBotInterface:
  urdf: xacro $(rospack find centauro_urdf)/urdf/centauro.urdf.xacro end_effector_right:=dagana
  srdf_path: $(rospack find centauro_srdf)/srdf/centauro.srdf

ModelInterface:
  model_type: RBDL
  is_model_floating_base: true


# hal
xbotcore_device_configs:
    sim: $(rospack find centauro_config)/hal/centauro_gz.yaml
    dummy: $(rospack find centauro_config)/hal/centauro_dummy.yaml


# threads
xbotcore_threads:
    rt_main:  {sched: fifo , prio: 60, period: 0.001}
    nrt_main: {sched: other, prio: 0 , period: 0.005}


.ctrl_override: &ctrl_override
  type: map<int>
  value:
    dagana_2_claw_joint: 0

# plugins
xbotcore_plugins:

    homing:
        thread: rt_main
        type: homing
        params:
          ctrl_override: *ctrl_override

    ros_io: {thread: nrt_main, type: ros_io}

    ros_control: 
      thread: nrt_main
      type: ros_control
      params: 
        autostart: {type: bool, value: true}
        ctrl_override: *ctrl_override

    cartesio: 
      thread: rt_main 
      type: albero_cartesio_rt
      params:
        ctrl_override: *ctrl_override
        problem_description:
          value: $PWD/cartesian_impedance_config.yaml
          type: file
        solver: {value: AlberoImpedance, type: string}
        enable_feedback: {value: true, type: bool}
        use_imu: {value: imu_link, type: string}
        follow_q_ref: {value: true, type: bool}
        enabled_chains:
          value:
            - left_arm
            - right_arm
          type: vector<string>

    omnisteering:
      type: omnisteering_controller_plugin
      thread: nrt_main 
      params:
        wheel_names: 
          value: [wheel_1, wheel_2, wheel_3, wheel_4]
          type: vector<string>
        wheel_radius: 
          value: [0.124, 0.124, 0.124, 0.124]
          type: vector<double>
        max_steering_speed: 
          value: 3.0
          type: double
    


# global parameters
xbotcore_param:
  /xbot/hal/joint_safety/filter_autostart: {value: true, type: bool}
  /xbot/hal/joint_safety/filter_cutoff_hz: {value: 2.0, type: double}
  /xbot/hal/enable_safety: {value: true, type: bool}






